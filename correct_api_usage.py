#!/usr/bin/env python3
"""
Ê≠£Á°ÆË∞ÉÁî® /api/v1/chat/app/1 Êé•Âè£ÁöÑÁ§∫‰æã‰ª£Á†Å
"""

import requests
import json


def correct_api_call_example():
    """ÊºîÁ§∫Ê≠£Á°ÆÁöÑAPIË∞ÉÁî®ÊñπÂºè"""

    BASE_URL = "http://localhost:8001"

    # 1. ÂÖàÁôªÂΩïËé∑Âèñ token
    print("üîê Step 1: ÁôªÂΩïËé∑Âèñtoken")
    login_response = requests.post(
        f"{BASE_URL}/api/v1/auth/login",
        json={"username": "test_json_user", "password": "test123"},
    )

    if login_response.status_code != 200:
        print(f"‚ùå ÁôªÂΩïÂ§±Ë¥•: {login_response.status_code}")
        return

    token = login_response.json()["access_token"]
    print(f"‚úÖ ÁôªÂΩïÊàêÂäüÔºåËé∑Âèñtoken: {token[:20]}...")

    # 2. ËÆæÁΩÆÊ≠£Á°ÆÁöÑËØ∑Ê±ÇÂ§¥
    headers = {
        "Authorization": f"Bearer {token}",
        "Content-Type": "application/json",  # Ëøô‰∏™ÂæàÈáçË¶ÅÔºÅ
    }

    # 3. ÂáÜÂ§áËØ∑Ê±ÇÊï∞ÊçÆ
    chat_data = {
        "query": "‰Ω†Â•ΩÔºåËØ∑‰ªãÁªç‰∏Ä‰∏ã‰Ω†ÁöÑÂäüËÉΩ",
        "conversation_id": "test-conversation-123",  # ÂèØÈÄâ
    }

    # 4. ÂèëÈÄÅËØ∑Ê±Ç - ÊñπÂºè1Ôºö‰ΩøÁî® requests.post(json=...)
    print("\nüí¨ Step 2: ÂèëÈÄÅËÅäÂ§©ËØ∑Ê±ÇÔºàÊñπÂºè1 - Êé®ËçêÔºâ")
    try:
        response = requests.post(
            f"{BASE_URL}/api/v1/chat/app/1",
            json=chat_data,  # ‰ΩøÁî® json ÂèÇÊï∞ÔºåËá™Âä®ËÆæÁΩÆ Content-Type
            headers={"Authorization": f"Bearer {token}"},  # Âè™ÈúÄË¶ÅËÆ§ËØÅÂ§¥
            timeout=30,
        )

        print(f"üì° ÂìçÂ∫îÁä∂ÊÄÅÁ†Å: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ ËØ∑Ê±ÇÊàêÂäüÔºÅÂºÄÂßãÊé•Êî∂ÊµÅÂºèÂìçÂ∫î...")
            # Â§ÑÁêÜÊµÅÂºèÂìçÂ∫î
            for line in response.iter_lines(decode_unicode=True):
                if line.strip():
                    print(f"üì¶ Êî∂Âà∞Êï∞ÊçÆ: {line[:100]}...")
                    if "data: " in line:
                        break  # Âè™ÊòæÁ§∫Á¨¨‰∏ÄÊù°Êï∞ÊçÆ‰Ωú‰∏∫Á§∫‰æã
        else:
            print(f"‚ùå ËØ∑Ê±ÇÂ§±Ë¥•: {response.text}")

    except Exception as e:
        print(f"‚ùå ËØ∑Ê±ÇÂºÇÂ∏∏: {e}")

    # 5. ÂèëÈÄÅËØ∑Ê±Ç - ÊñπÂºè2ÔºöÊâãÂä®ËÆæÁΩÆ JSON Êï∞ÊçÆ
    print("\nüí¨ Step 3: ÂèëÈÄÅËÅäÂ§©ËØ∑Ê±ÇÔºàÊñπÂºè2 - ÊâãÂä®JSONÔºâ")
    try:
        headers_with_content_type = {
            "Authorization": f"Bearer {token}",
            "Content-Type": "application/json",  # ÊâãÂä®ËÆæÁΩÆ
        }

        response = requests.post(
            f"{BASE_URL}/api/v1/chat/app/1",
            data=json.dumps(chat_data),  # ÊâãÂä®Â∫èÂàóÂåñJSON
            headers=headers_with_content_type,
            timeout=30,
        )

        print(f"üì° ÂìçÂ∫îÁä∂ÊÄÅÁ†Å: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ ÊñπÂºè2‰πüÊàêÂäüÔºÅ")
        else:
            print(f"‚ùå ÊñπÂºè2Â§±Ë¥•: {response.text}")

    except Exception as e:
        print(f"‚ùå ÊñπÂºè2ÂºÇÂ∏∏: {e}")


def show_frontend_examples():
    """ÊòæÁ§∫ÂâçÁ´ØË∞ÉÁî®Á§∫‰æã"""

    print("\n" + "=" * 60)
    print("üåê ÂâçÁ´ØË∞ÉÁî®Á§∫‰æã")
    print("=" * 60)

    print("""
// ‚úÖ JavaScript/TypeScript - ‰ΩøÁî® fetch
async function chatWithApp(query, conversationId = null) {
    const token = localStorage.getItem('authToken'); // ÂÅáËÆætokenÂ≠òÂÇ®Âú®localStorage
    
    const response = await fetch('/api/v1/chat/app/1', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({
            query: query,
            conversation_id: conversationId
        })
    });
    
    if (!response.ok) {
        const error = await response.json();
        throw new Error(`API Error: ${error.detail}`);
    }
    
    // Â§ÑÁêÜÊµÅÂºèÂìçÂ∫î
    const reader = response.body.getReader();
    const decoder = new TextDecoder();
    
    while (true) {
        const { done, value } = await reader.read();
        if (done) break;
        
        const chunk = decoder.decode(value);
        console.log('Received:', chunk);
    }
}

// ‚úÖ JavaScript/TypeScript - ‰ΩøÁî® axios
import axios from 'axios';

async function chatWithAppAxios(query, conversationId = null) {
    const token = localStorage.getItem('authToken');
    
    const response = await axios.post('/api/v1/chat/app/1', {
        query: query,
        conversation_id: conversationId
    }, {
        headers: {
            'Authorization': `Bearer ${token}`
        },
        responseType: 'stream' // ÂØπ‰∫éÊµÅÂºèÂìçÂ∫î
    });
    
    return response.data;
}

// ‚úÖ React Á§∫‰æã
import React, { useState } from 'react';

function ChatComponent() {
    const [message, setMessage] = useState('');
    const [response, setResponse] = useState('');
    
    const handleSendMessage = async () => {
        try {
            const token = localStorage.getItem('authToken');
            
            const res = await fetch('/api/v1/chat/app/1', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({
                    query: message
                })
            });
            
            if (!res.ok) {
                const error = await res.json();
                console.error('API Error:', error.detail);
                return;
            }
            
            // Â§ÑÁêÜÊµÅÂºèÂìçÂ∫î...
            console.log('Message sent successfully');
            
        } catch (error) {
            console.error('Request failed:', error);
        }
    };
    
    return (
        <div>
            <input 
                value={message} 
                onChange={(e) => setMessage(e.target.value)}
                placeholder="ËæìÂÖ•Ê∂àÊÅØ..."
            />
            <button onClick={handleSendMessage}>ÂèëÈÄÅ</button>
        </div>
    );
}
""")


if __name__ == "__main__":
    correct_api_call_example()
    show_frontend_examples()
